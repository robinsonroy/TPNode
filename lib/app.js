// Generated by CoffeeScript 1.11.1
(function() {
  var app, authCheck, bodyparser, express, levelStore, metrics, morgan, nib, session, stylus, user;

  express = require('express');

  session = require('express-session');

  levelStore = require('level-session-store')(session);

  metrics = require('./metrics');

  user = require('./user');

  morgan = require('morgan');

  bodyparser = require('body-parser');

  stylus = require('stylus');

  nib = require('nib');

  app = express();

  app.use(morgan('dev'));

  app.use(stylus.middleware({
    src: __dirname + '/../stylesheets',
    dest: __dirname + '/../public/css',
    compile: function(str, path) {
      return stylus(str).set('filename', path).set('compress', true).use(nib())["import"]('nib');
    }
  }));

  app.use(bodyparser.json());

  app.use(bodyparser.urlencoded({
    extended: true
  }));

  app.set('port', 1337);

  app.use(session({
    secret: 'metricsApp',
    store: new levelStore('./db/session'),
    resave: true,
    saveUninitialized: true
  }));

  authCheck = function(req, res, next) {
    console.log("Auth Check ...");
    console.log(req.session.user);
    if (req.session.loggedIn === true) {
      console.log("auth check ok");
      return next();
    } else {
      console.log("auth check nok");
      return res.redirect('/login');
    }
  };

  app.set('view engine', 'pug');

  app.set('views', __dirname + "/../views");

  app.use('/', express["static"](__dirname + "/../public"));

  app.get('/login', function(req, res) {
    var base;
    console.log("Login Error : " + req.query.error);
    return res.render('login', {
      error: (base = req.query).error != null ? base.error : base.error = ''
    });
  });

  app.post('/login', function(req, res) {
    return user.get(req.body.username, req.body.password, function(err, value) {
      if (err) {
        req.params.error = err;
        return res.redirect('/login' + '/?error=' + err);
      } else {
        req.session.loggedIn = true;
        req.session.user = value.username;
        return res.redirect('/');
      }
    });
  });

  app.get('/logout', authCheck, function(req, res) {
    delete req.session.loggedIn;
    delete req.session.user;
    return res.redirect('/');
  });

  app.get('/', authCheck, function(req, res) {
    console.log("access to app");
    return res.end('Welcome !');
  });

  app.get('/metrics.json', function(req, res) {
    return metrics.get(function(err, data) {
      if (err) {
        throw next(err);
      }
      return res.status(200).json(data);
    });
  });

  app.get('/metrics', function(req, res) {
    return res.render('metrics-layout');
  });

  app.put('/signup', function(req, res) {
    return user.save(req.body.username, req.body.name, req.body.password, req.body.email, function(err) {
      if (err) {
        throw err;
      }
      return res.status(200).send();
    });
  });

  app.get('/users', function(req, res) {
    return user.get(function(err, data) {
      if (err) {
        throw err;
      }
      return res.render('user-layout');
    });
  });

  app.listen(app.get('port'), function() {
    return console.log("listen on port " + (app.get('port')));
  });

}).call(this);
